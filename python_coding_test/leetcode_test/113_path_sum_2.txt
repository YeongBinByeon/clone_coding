# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

import copy

class Solution:
    ans = None
    ans_list = []
        
    def dfs(self, node: TreeNode, path: List):
        
        # 최초 Input Null Node 일 때,
        if node == None:
            return
        
        path.append(node.val)

        # leefNode임. 답 판별 필요 시점
        if node.left == None and node.right == None:
            if sum(path) == Solution.ans:
                Solution.ans_list.append(path)
            return
        
        # 왼쪽 leaf 있을 때
        if node.left != None:
            self.dfs(node.left, copy.deepcopy(path))
        
        # 오른쪽 leaf 있을 때
        if node.right != None:
            self.dfs(node.right, copy.deepcopy(path))
        
    def pathSum(self, root: TreeNode, targetSum: int) -> List[List[int]]:
        Solution.ans = None
        Solution.ans_list = []
        
        
        Solution.ans = targetSum
        print(Solution.ans)
        
        self.dfs(root, [])
        
        return Solution.ans_list
        
        